package bots

import (
	"fmt"
	"log"

	"github.com/comov/hsearch/structs"
)

const startMessage = `
–≠—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä. –û—Å–Ω–æ–≤–Ω–æ–µ –µ–≥–æ –ø—Ä–∏–µ–º—É—â–µ—Å—Ç–≤–æ —ç—Ç–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–º –∫–≤–∞—Ä—Ç–∏—Ä–∞–º. –≠—Ç–æ –Ω–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç, –∫–æ–¥ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ. –ï—Å–ª–∏ –µ—Å—Ç—å –∏–¥–µ–∏, –æ—Å—Ç–∞–≤–ª—è–π —Ñ–∏–¥–±–µ–∫ :)

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
/stop - –∏—Å–∫–ª—é—á–∏—Ç –í–∞—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –±–æ—Ç–∞
/search - –≤–∫–ª—é—á–∏—Ç –ø–æ–∏—Å–∫ –∫–≤–∞—Ä—Ç–∏—Ä, –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –í–∞–º –Ω–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –∫–∞–∫ –Ω–∞–π–¥–µ—Ç
/feedback <text> - –æ—Ç—Å—Ç–∞–≤–∏—Ç—å –≥–Ω–µ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—É üòê
`

const templateMessage = `
%s

–¶–µ–Ω–∞: %s
–ö–æ–º–Ω–∞—Ç: %s
–ù–æ–º–µ—Ä: %s
–°—Å—ã–ª–∫–∞: %s
`

const stopNotFound = `%s –Ω–µ—Ç –≤ –±–∞–∑–µ. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ —è %s –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—é`
const noOffers = `–ü–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π`

func DefaultMessage(offer *structs.Offer) string {
	return fmt.Sprintf(templateMessage,
		offer.Topic,
		offer.FullPrice,
		offer.Rooms,
		offer.Phone,
		offer.Url,
	)
}

func (b *Bot) bookmarksMessages(offers []*structs.Offer, chat int64) {
	for _, offer := range offers {
		err := b.SendOffer(offer, chat, nil, "")
		if err != nil {
			log.Println("[bookmarksMessages.SendOffer] error:", err)
		}
	}
}

func WaitPhotoMessage(count int) string {
	handler := func(end string) string {
		message := "–©–∞ –æ—Ç–ø—Ä–∞–≤–ª—é %d —Ñ–æ—Ç%s. –≠—Ç–æ –¥–æ–ª–≥–æ, –∂–¥–∏..."
		return fmt.Sprintf(message, count, end)
	}
	if count == 1 || count == 21 || count == 31 {
		return handler("–∫—É")
	}
	if (count > 1 && count < 5) || (count > 21 && count < 25) {
		return handler("–∫–∏")
	}
	if (count >= 5 && count < 21) || (count >= 25 && count < 31) {
		return handler("–æ–∫")
	}

	return "–©–∞ –æ—Ç–ø—Ä–∞–≤–ª—é –ø–∞—Ä—É —Ñ–æ—Ç–æ–∫. –≠—Ç–æ –¥–æ–ª–≥–æ, –∂–¥–∏..."
}
